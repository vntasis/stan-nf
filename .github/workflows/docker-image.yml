name: Docker Image CI

on:
  push:
    branches:
    - 'main'
    - 'dev'

jobs:

  build_push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Verify Dockerfile changed
      id: dockerfile_changed
      uses: tj-actions/changed-files@v18.7
      with:
        files: |
          docker/stan/Dockerfile

    - name: Login to DockerHub
      if: steps.dockerfile_changed.outputs.any_changed == 'true'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push the Docker image
      if: steps.dockerfile_changed.outputs.any_changed == 'true'
      run: |
        docker build -f docker/stan/Dockerfile -t vntasis/stan:${{ github.ref_name }} .
        docker push vntasis/stan:${{ github.ref_name }}
        if [ ${{ github.ref_name }} == 'main' ]
        then
          docker tag vntasis/stan:${{ github.ref_name }} vntasis/stan:latest
          docker push vntasis/stan:latest
        fi

  test:
    needs: build_push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NXF_VER: ['20.10.0', '']

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Pull the docker image
      run: |
        docker pull vntasis/stan:${{ github.ref_name }}
        docker tag vntasis/stan:${{ github.ref_name }} vntasis/stan:latest

    - name: Install Nextflow
      env:
        NXF_VER: ${{ matrix.NXF_VER }}
      run: |
        wget -qO- get.nextflow.io | bash
        sudo mv nextflow /usr/local/bin/

    - name: Run pipeline with test data
      env:
        parameters: "--steps 'build-model,sample,diagnose,generate-quantities' \
                     --chains 2 \
                     --model 'examples/models/*.stan' \
                     --data 'examples/data/*json' \
                     --numSamples 2000"
      run: |
        cd ${GITHUB_WORKSPACE}
        nextflow run main.nf $parameters
